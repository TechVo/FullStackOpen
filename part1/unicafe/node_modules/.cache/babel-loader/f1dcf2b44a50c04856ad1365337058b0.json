{"ast":null,"code":"var _jsxFileName = \"/home/vojta/Learning/FullStackOpen/part1/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Button;\n\nconst StatisticsLine = _ref2 => {\n  let {\n    value,\n    text,\n    suffix\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: [text, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: [value, suffix]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 7\n  }, this);\n};\n\n_c2 = StatisticsLine;\n\nconst Statistics = _ref3 => {\n  let {\n    good,\n    bad,\n    neutral\n  } = _ref3;\n  const all = good + bad + neutral;\n\n  if (all <= 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticsLine, {\n        value: good,\n        text: \"good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        value: neutral,\n        text: \"neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        value: bad,\n        text: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        value: ((good - bad) / all).toFixed(1),\n        text: \"average\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticsLine, {\n        value: (good / all * 100).toFixed(1),\n        text: \"positive\",\n        suffix: \" %\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = Statistics;\n\nconst App = () => {\n  _s();\n\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setGood(good + 1),\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setNeutral(neutral + 1),\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: () => setBad(bad + 1),\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticsLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/home/vojta/Learning/FullStackOpen/part1/unicafe/src/App.js"],"names":["useState","Button","handleClick","text","StatisticsLine","value","suffix","Statistics","good","bad","neutral","all","toFixed","App","setGood","setNeutral","setBad"],"mappings":"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","sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ handleClick, text }) => \n  <button onClick={handleClick}>{text}</button>\n\nconst StatisticsLine = ({ value, text, suffix }) => {\n  return(\n      <tr>\n        <td>\n          {text}: \n        </td>\n        <td>\n          {value}{suffix}\n        </td>\n      </tr>\n  )\n}\n\nconst Statistics = ({good, bad, neutral}) => {\n  const all = good + bad + neutral\n  \n  if (all <= 0) {\n    return(\n      <div>\n        <h1>statistics</h1>\n        <p>No feedback given</p>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>statistics</h1>\n      <table>\n        <StatisticsLine value={good} text=\"good\" />\n        <StatisticsLine value={neutral} text=\"neutral\" />\n        <StatisticsLine value={bad} text=\"bad\" />\n        <StatisticsLine value={((good - bad) / all).toFixed(1)} text=\"average\" />\n        <StatisticsLine value={(good / all * 100).toFixed(1)} text=\"positive\" suffix={\" %\"} />\n      </table>\n    </div>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={() => setGood(good + 1)} text=\"good\" />\n      <Button handleClick={() => setNeutral(neutral + 1)} text=\"neutral\" />\n      <Button handleClick={() => setBad(bad + 1)} text=\"bad\" />\n\n      <Statistics good={good} neutral={neutral} bad={bad} />\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}